// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __bind = function(fn, me) {
      return function() {
        return fn.apply(me, arguments);
      };
    },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) {
      for (var key in parent) {
        if (__hasProp.call(parent, key)) child[key] = parent[key];
      }

      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    };


  Batman.mixin(Batman.Filters, {
    displayWindDirection: function(val) {
      if (typeof val === 'undefined') {
        return void 0;
      }
      if (val.lenght === 0) {
        return void 0;
      }
      if (val == '-') {
        return void 0;
      }
      return '(' + val + ')';
    }
  });

  Dashing.WeatherStation = (function(_super) {
    __extends(WeatherStation, _super);

    function WeatherStation() {
      this.refreshData = __bind(this.refreshData, this);
      _ref = WeatherStation.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    WeatherStation.prototype.ready = function() {
      this.refreshData();
      //return setInterval(this.refreshData, 10000 ); // every 10 seconds
      return setInterval(this.refreshData, 60000 * 5 ); // every 5 minutes
    };

    WeatherStation.prototype.refreshData = function() {
      var url = '/weather/' + this.get('location') + '.json';
      var that = this;
      $.getJSON(url, function(data) {
        that.showData(data);
      });
    };

    WeatherStation.prototype.showData = function(data) {
      this.set('variables', data);

      if (this.$bookBlock) {
        this.$bookBlock.bookblock('update');
      } else {
        this.$bookBlock = $(this.node).find('.bb-bookblock');
        this.$bookBlock.bookblock({
          speed: 800,
          autoplay: true,
          circular: true,
          flip: false
        });
        var that = this;
        $(this.node).find('.bb-nav-prev').on('click touchstart', function() {
          that.$bookBlock.bookblock('prev');
          return false;
        });
        $(this.node).find('.bb-nav-next').on('click touchstart', function() {
          that.$bookBlock.bookblock('next');
          return false;
        });
      }



    };

    return WeatherStation;

  })(Dashing.Widget);

}).call(this);