// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __bind = function(fn, me) {
      return function() {
        return fn.apply(me, arguments);
      };
    },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) {
      for (var key in parent) {
        if (__hasProp.call(parent, key)) child[key] = parent[key];
      }

      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    };

  Dashing.Deployments = (function(_super) {
    __extends(Deployments, _super);

    function Deployments() {
      this.refreshData = __bind(this.refreshData, this);
      _ref = Deployments.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Deployments.prototype.ready = function() {
      this.refreshData();
      if (this.get('title') !== undefined && this.get('title') === '') {
        $(this.node).find('h1').remove();
      }
      return setInterval(this.refreshData, 60000 * 60 ); // every hour
    };

    Deployments.prototype.refreshData = function() {
      var that = this;
      var url = '/deployments/stats.json';

      $.getJSON(url, function(data) {
        deployments = [];
        for (var key in data) {
          if (data.hasOwnProperty(key)) {
            var deployment = {
              type: key,
              count: data[key],
              image: that.slugify(key)
            };
            deployments.push(deployment);
          }
        }
        that.set('deployments', deployments);
      });
    };


    Deployments.prototype.slugify = function(str) {
      str = str.replace(/[^a-zA-Z0-9\s]/g,"");
      str = str.toLowerCase();
      str = str.replace(/\s/g,'-');
      return str;
    };


    return Deployments;

  })(Dashing.Widget);

}).call(this);