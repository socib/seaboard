// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
  __bind = function(fn, me) {
      return function() {
        return fn.apply(me, arguments);
      };
    },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) {
      for (var key in parent) {
        if (__hasProp.call(parent, key)) child[key] = parent[key];
      }

      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    };

  Dashing.WeatherForecastDiving = (function(_super) {
    __extends(WeatherForecastDiving, _super);

    function WeatherForecastDiving() {
      this.refreshData = __bind(this.refreshData, this);
      _ref = WeatherForecastDiving.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    WeatherForecastDiving.prototype.ready = function() {
      this.refreshData();
      return setInterval(this.refreshData, 60000 * 60 * 2); // every 2 hours
    };

  WeatherForecastDiving.prototype.refreshData = function() {
     var url = '/weather/' + this.get('location') + '/forecast.json';    
      var that = this;
     $.getJSON(url, function(data) {
          that.showData(data);
      });

  };
   


    WeatherForecastDiving.prototype.showData = function(data) {
      
      this.set('summary', data.daily.summary);
      var that = this;
      var days = this.get('days') !== undefined ? this.get('days') : 3; //3
      var predictions = _.map(_.first(data.daily.data, days), function(prediction) {
        var d = new Date(prediction.time * 1000);
        if (d - new Date().setHours(0, 0, 0, 0) === 0) {
          prediction.time = 'Today';
        } else {
          prediction.time = d.format('dddd');  //formato del dia
        }
        prediction.humidity = Math.round(prediction.humidity * 100) + ' %';
        prediction.temperatureMax = prediction.temperatureMax.toFixed(1) + ' °C';
        prediction.temperatureMin = prediction.temperatureMin.toFixed(1) + ' °C';
        prediction.windSpeed = prediction.windSpeed.toFixed(1);
        prediction.pressure = prediction.pressure.toFixed(1);
        prediction.pressure_units = ' hPa';
        prediction.windSpeed_units = ' km/h';
        prediction.cloudCover = Math.round(prediction.cloudCover * 100) + ' %';
        
        var dd = new Date(prediction.sunsetTime * 1000);
        prediction.sunsetTime = dd.format('hh:mm');  //formato del dia

        dd = new Date(prediction.sunriseTime * 1000);
        prediction.sunriseTime = dd.format('hh:mm');  //formato del dia
       
        prediction.windBearing = that.bearingToCardinal(prediction.windBearing); 

        return prediction;
      });
      this.set('predictions', predictions);


    };

    WeatherForecastDiving.prototype.bearingToCardinal = function(windBearing) {
      var cardinals = [
          'N', 'NE',
          'E', 'SE',
          'S', 'SW',
          'W', 'NW'
      ];
      var c = cardinals.length;
      var i = parseInt(windBearing / 360 * c + 0.5, 10) % c;
      return cardinals[i];
    };


    return WeatherForecastDiving;

  })(Dashing.Widget);

}).call(this);



/*

 Clock.prototype.startTime = function() {
      var h, m, s, today;

      today = new Date();
      h = today.getHours();
      m = today.getMinutes();
      s = today.getSeconds();
      m = this.formatTime(m);
      s = this.formatTime(s);
      this.set('time', h + ":" + m + ":" + s);
      return this.set('date', today.toDateString());
    };





*/